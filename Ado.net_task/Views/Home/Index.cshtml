@model IEnumerable<Ado.net_task.Models.Product_Model>
@using Ado.net_task.Models;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@{
    Pager pager = new Pager();
    int pageNo = 0;
    if (ViewBag.pager != null)
    {
        pager = ViewBag.pager;
        pageNo = pager.CurrentPage;
    }
}

<div class="container">
    @if (pager.TotalPage > 0)
    {
        <ul class="pagination justified-content-end">
            @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
            {
                <li class="page-item" @(pge == pager.CurrentPage ? "active" : "")>
                    @Html.ActionLink("" + @pge + "", "Index", "Home", new { @Pg = pge }, new { @class = "Page-link" })

                </li>
            }
        </ul>
    }
</div>
<p>
    @Html.ActionLink("Create New", "Create")
</p>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CategoryId)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryId)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ProductId }) |

                @Html.ActionLink("Delete", "Delete", new { id = item.ProductId })
            </td>
        </tr>
    }

</table>
